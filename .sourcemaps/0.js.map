{"version":3,"sources":["../../src/pages/signup/signup.module.ts","../../src/app/services/domain/cidade.service.ts","../../src/app/services/estado.service.ts","../../src/pages/signup/signup.ts"],"names":[],"mappings":"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","file":"0.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { SignupPage } from './signup';\r\nimport { CidadeService } from '../../app/services/domain/cidade.service';\r\nimport { EstadoService } from '../../app/services/estado.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SignupPage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(SignupPage),\r\n  ],\r\n  providers:[\r\n    CidadeService,\r\n    EstadoService \r\n  ]\r\n})\r\nexport class SignupPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/signup/signup.module.ts","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs/Rx\";\r\nimport { API_CONFIG } from \"../../../config/api.config\";\r\nimport { CidadeDTO } from \"../../../models/cidade.dto\";\r\n\r\n\r\n\r\n@Injectable()\r\nexport class CidadeService {\r\n\r\n    constructor(public http: HttpClient) {\r\n    }\r\n\r\n    findAll(estado_id : string) : Observable<CidadeDTO[]>  {\r\n        return this.http.get<CidadeDTO[]>(`${API_CONFIG.baseUrl}/estados/${estado_id}/cidades`);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/domain/cidade.service.ts","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs/Rx\";\r\nimport { API_CONFIG } from \"../../config/api.config\";\r\nimport { EstadoDTO } from \"../../models/estado.dto\";\r\n\r\n\r\n\r\n@Injectable()\r\nexport class EstadoService {\r\n\r\n    constructor(public http: HttpClient) {\r\n    }\r\n\r\n    findAll() : Observable<EstadoDTO[]>  {\r\n        return this.http.get<EstadoDTO[]>(`${API_CONFIG.baseUrl}/estados`);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/estado.service.ts","import { Component } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams, AlertController } from 'ionic-angular';\r\nimport { FormGroup, FormBuilder,Validators } from '@angular/forms';\r\nimport { CidadeService } from '../../app/services/domain/cidade.service';\r\nimport { EstadoService } from '../../app/services/estado.service';\r\nimport { EstadoDTO } from '../../models/estado.dto';\r\nimport { CidadeDTO } from '../../models/cidade.dto';\r\nimport { ClienteService } from '../../app/services/cliente.service';\r\n\r\n\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-signup',\r\n  templateUrl: 'signup.html',\r\n})\r\nexport class SignupPage {\r\n\r\n  formGroup: FormGroup;\r\n  estados: EstadoDTO[];\r\n  cidades: CidadeDTO[];\r\n\r\n\r\n  constructor(public navCtrl: NavController, \r\n              public navParams: NavParams,\r\n              public formBuilder: FormBuilder,\r\n              public cidadeservice: CidadeService,\r\n              public estadoservice: EstadoService,\r\n              public clienteservice: ClienteService,\r\n              public alertcontrol: AlertController) {\r\n\r\n                  /*\r\n    NO CAMPO FORMGROUP COMO VOCE COLOCOU NO CLASSES DO JAVA DTO\r\n    VOCE PRECISA COLOCAR O NOME IGUAL ESTÁ NO CLASSE SE FOR DIFERENTE\r\n    PODE DAR ERRO DE INSERT OU UPDATE OU DELETE DE ACORDO COM\r\n    FORM GROUP\r\n                  */  \r\n                this.formGroup = this.formBuilder.group({\r\n                  nome: ['Felipe Scarpin',[Validators.required,Validators.minLength(5),Validators.maxLength(120)]],\r\n                  email:['Felipe.scarpin@ti.com.br',[Validators.required,Validators.email]],\r\n                  tipo:['1',[Validators.required]],\r\n                  cpfOuCnpj : ['74560528080', [Validators.required, Validators.minLength(11), Validators.maxLength(14)]],\r\n                  senha:['123',[Validators.required]],\r\n                  logradouro:['Rua TI',[Validators.required]],\r\n                  numero:['12',[Validators.required]],\r\n                  complemento:['Apto 3',[]],\r\n                  bairro:['Copacabana',[]],\r\n                  cep:['1082833',[Validators.required]],\r\n                  telefone1:['9917243521',[Validators.required]],\r\n                  telefone2:['',[]],\r\n                  telefone3:['',[]],\r\n                  estadoId:[null,[Validators.required]],\r\n                  cidadeId:[null,[Validators.required]]\r\n                });\r\n  }\r\n  \r\n\r\n  ionViewDidLoad(){\r\n    this.estadoservice.findAll()\r\n    .subscribe(response =>{\r\n       this.estados = response;\r\n       this.formGroup.controls.estadoId.setValue(this.estados[0].id);\r\n       this.updateCidades();\r\n    },error =>{})\r\n  }\r\n  showInsertOk() {\r\n    let alert = this.alertcontrol.create({\r\n      title: 'Sucesso!',\r\n      message: 'Cadastro efetuado com sucesso',\r\n      enableBackdropDismiss: false,\r\n      buttons: [\r\n        {\r\n          text: 'Ok',\r\n          handler: () => {\r\n            this.navCtrl.pop();\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    alert.present();\r\n  }\r\n  signupUser(){\r\n    this.clienteservice.insert(this.formGroup.value)\r\n    .subscribe(response =>{\r\n      this.showInsertOk();\r\n    },\r\n    error =>{});\r\n    \r\n  }\r\n  updateCidades() {\r\n    let estado_id = this.formGroup.value.estadoId;\r\n    this.cidadeservice.findAll(estado_id)\r\n      .subscribe(response => {\r\n        this.cidades = response;\r\n        this.formGroup.controls.cidadeId.setValue(null);\r\n      },\r\n      error => {});\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/signup/signup.ts"],"sourceRoot":""}